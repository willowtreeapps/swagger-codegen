package {{package}}.api;

import {{modelPackage}}.*;

import android.app.IntentService;
import android.content.Context;
import android.content.Intent;
import android.os.Parcelable;
import android.support.v4.content.LocalBroadcastManager;
import java.util.*;

{{#imports}}import {{import}};
{{/imports}}

public class {{classname}}Service extends IntentService {
    public static final String ACTION_BASE = "{{package}}.";

    public static final String METHOD = "method";
{{#operations}}
{{#operation}}
    public static final String {{operationIdConst}} = ACTION_BASE + "{{operationId}}";
{{/operation}}
{{/operations}}

    public static final String ARG_1 = "arg1";
    public static final String ARG_2 = "arg2";
    public static final String ARG_3 = "arg3";
    public static final String ARG_4 = "arg4";
    public static final String ARG_5 = "arg5";
    public static final String ARG_6 = "arg6";
    public static final String ARG_7 = "arg7";

    public static final String EXTRA_METHOD = "method";
    public static final String EXTRA_RESPONSE = "response";
    public static final String EXTRA_ERROR = "error";

    public {{classname}}Service() {
        super("{{classname}}Service");
    }

    @Override
    public void onHandleIntent(Intent intent) {
        String method = intent.getStringExtra(METHOD);
        if (method == null) {
            throw new IllegalArgumentException("missing api method");
        }
        try {
{{#operations}}
{{#operation}}
            if (method.equals({{operationIdConst}})) {
{{#allParams}}
                {{dataType}} {{paramName}} = intent.{{serializeMethod}}(ARG_{{-index}}{{#defaultValue}}, {{/defaultValue}}{{defaultValue}});
{{/allParams}}
                handle{{operationIdCapital}}({{#allParams}}{{paramName}}{{#hasMore}}, {{/hasMore}}{{/allParams}});
            }
{{/operation}}
{{/operations}}
        } catch (Exception e) {
            handleError(method, e);
        }
    }

{{#operations}}
{{#operation}}
    protected void handle{{operationIdCapital}}({{#allParams}}{{dataType}} {{paramName}}{{#hasMore}}, {{/hasMore}}{{/allParams}}) {
        // TODO
    }
{{/operation}}
{{/operations}}

    protected void handleResponse(String method, Parcelable response) {
        LocalBroadcastManager.getInstance(this).sendBroadcast(new Intent(method)
            .putExtra(EXTRA_METHOD, method)
            .putExtra(EXTRA_RESPONSE, response));
    }

    protected void handleError(String method, Exception error) {
        LocalBroadcastManager.getInstance(this).sendBroadcast(new Intent(method)
            .putExtra(EXTRA_METHOD, method)
            .putExtra(EXTRA_ERROR, error));
    }

    public static {{classname}}Proxy proxy(Context context) {
        return new {{classname}}Proxy(context);
    }
}
